name: Test Build

on:
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.11 venv
      run: |
        python3.11 -m venv venv
        source venv/bin/activate
        pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Lint code
      run: |
        python -m py_compile bot.py main.py
        find src -name "*.py" -exec python -m py_compile {} \;
        
    - name: Test imports
      run: |
        python -c "
        import sys
        sys.path.append('.')
        try:
            from src.database import DatabaseManager
            from src.gemini_chat_handler import GeminiChatHandler
            from src.ai_handler import AIHandler
            from src.scraper import MITDeadlineScraper
            from src.reminder_system import ReminderSystem
            print('✅ All imports successful')
        except ImportError as e:
            print(f'❌ Import error: {e}')
            sys.exit(1)
        "
        
    - name: Test database initialization
      run: |
        python -c "
        import os
        import asyncio
        from src.database import DatabaseManager
        
        async def test_db():
            db = DatabaseManager(':memory:')
            await db.initialize()
            print('✅ Database initialization successful')
            await db.close()
            
        asyncio.run(test_db())
        "
        
    - name: Validate environment template
      run: |
        if [ -f ".env.example" ]; then
          echo "✅ Environment template exists"
          grep -q "TOKEN=" .env.example && echo "✅ TOKEN variable found"
          grep -q "GEMINI_API_KEY=" .env.example && echo "✅ GEMINI_API_KEY variable found"
        else
          echo "❌ .env.example not found"
          exit 1
        fi
        
    - name: Check deployment files
      run: |
        if [ -f "deployment/setup_pi.sh" ]; then
          echo "✅ Pi setup script exists"
        else
          echo "❌ Pi setup script missing"
          exit 1
        fi
        
        if [ -f "deployment/sir-tim-bot.service" ]; then
          echo "✅ Systemd service file exists"
        else
          echo "❌ Systemd service file missing"
          exit 1
        fi
